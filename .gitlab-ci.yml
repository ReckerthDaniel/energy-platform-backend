stages:
  - build
  - test
  - checkstyle
  - deploy

build:
  stage: build
  image: maven:3.8.3-jdk-11
  script:
    - mvn clean package

build_image:
  image: docker:latest
  services:
    - docker:dind
  stage: build
  script:
    - docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest

test:
  stage: test
  image: maven:3.8.3-jdk-11
  script:
    - echo "Test DEMO app"
    - mvn test && mvn jacoco:report
    - cat target/site/jacoco/index.html | grep -o '.*'
  coverage: "/Total.*?([0-9]{1,3})%/"

checkstyle:
  stage: checkstyle
  image: maven:3.8.3-jdk-11
  script:
    - echo "Checkstyle DEMO app"
    - mvn checkstyle:check

variables:
  APP_NAME: ds2021-energy-daniel-backend
  DB_IP: ec2-54-74-60-70.eu-west-1.compute.amazonaws.com
  DB_PORT: 5432
  DB_USER: dvuisidxtsghbd
  DB_PASSWORD: d4718329d17128e9c32d1c082dedefb6617190c9a87b812a8728bd548f49d388
  DB_DBNAME: d11ljba3hvvpk6

deploy:
  stage: deploy
  image: ruby:2.4
  script:
    - apt-get update -qy
    - apt-get install -y ruby-dev
    - gem install dpl
    - dpl --provider=heroku --app=ds2021-energy-daniel-backend --api-key=$HEROKU_API_KEY
  only:
    - production

deploy_container:
  image: docker:latest
  services:
    - docker:dind
  stage: deploy
  only:
    - docker_production
  script:
    - docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest
    - docker tag $CI_REGISTRY_IMAGE:latest $HEROKU_REGISTRY_IMAGE:latest
    - docker login --username=_ --password=$HEROKU_API_KEY $HEROKU_REGISTRY
    - docker push $HEROKU_REGISTRY_IMAGE:latest
    - docker run --rm -e HEROKU_API_KEY=$HEROKU_API_KEY wingrunr21/alpine-heroku-cli container:release web --app $APP_NAME
